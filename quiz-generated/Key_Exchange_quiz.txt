[[Q]] What is the main challenge of encrypting data between two parties over the internet? [[/Q]]
[[A]] Creating a long enough encryption key [[/A]]
[[A]] Physically transferring the encryption key securely [[/A]]
[[A]] Avoiding compression during transmission [[/A]]
[[A]] Ensuring compatibility between operating systems [[/A]]
[[A]] Limiting the amount of encrypted data [[/A]]
[[C]] Physically transferring the encryption key securely [[/C]]

[[Q]] What does "out-of-band" key exchange mean? [[/Q]]
[[A]] Sending the key using an encrypted tunnel [[/A]]
[[A]] Encrypting the key using hashing algorithms [[/A]]
[[A]] Transmitting the key through the same internet channel [[/A]]
[[A]] Using a different medium than the network to share the key [[/A]]
[[A]] Transmitting multiple copies of the key [[/A]]
[[C]] Using a different medium than the network to share the key [[/C]]

[[Q]] Which of the following is an example of out-of-band key exchange? [[/Q]]
[[A]] Sending the key in an email [[/A]]
[[A]] Encrypting the key using AES [[/A]]
[[A]] Sharing the key in person [[/A]]
[[A]] Posting the key on a website [[/A]]
[[A]] Using a browser-based key negotiation [[/A]]
[[C]] Sharing the key in person [[/C]]

[[Q]] Why is in-band key exchange necessary for internet communications? [[/Q]]
[[A]] It provides stronger encryption than out-of-band methods [[/A]]
[[A]] It helps authenticate users [[/A]]
[[A]] It allows real-time secure communication without delays [[/A]]
[[A]] It uses less bandwidth [[/A]]
[[A]] It bypasses firewalls and proxies [[/A]]
[[C]] It allows real-time secure communication without delays [[/C]]

[[Q]] How can asymmetric encryption be used in key exchange? [[/Q]]
[[A]] It directly encrypts all user messages [[/A]]
[[A]] It generates a random symmetric key on both ends [[/A]]
[[A]] It encrypts a symmetric key for secure transmission [[/A]]
[[A]] It replaces the need for symmetric encryption [[/A]]
[[A]] It is used to compress encrypted traffic [[/A]]
[[C]] It encrypts a symmetric key for secure transmission [[/C]]

[[Q]] What is a session key? [[/Q]]
[[A]] A public key that changes frequently [[/A]]
[[A]] A long-term encryption key shared by all users [[/A]]
[[A]] A temporary symmetric key used for a single session [[/A]]
[[A]] A unique hash value of the session data [[/A]]
[[A]] A digital certificate used to verify identity [[/A]]
[[C]] A temporary symmetric key used for a single session [[/C]]

[[Q]] How does a server obtain a symmetric session key in a typical exchange? [[/Q]]
[[A]] It generates the key independently [[/A]]
[[A]] It hashes the client’s IP address [[/A]]
[[A]] It receives the session key over a phone call [[/A]]
[[A]] It decrypts the session key using its private key [[/A]]
[[A]] It uses a digital signature to request the key [[/A]]
[[C]] It decrypts the session key using its private key [[/C]]

[[Q]] What happens to session keys after use? [[/Q]]
[[A]] They are stored in the browser for future sessions [[/A]]
[[A]] They are embedded into SSL certificates [[/A]]
[[A]] They are deleted and replaced with new ones [[/A]]
[[A]] They are sent to a certificate authority [[/A]]
[[A]] They are used to encrypt private keys [[/A]]
[[C]] They are deleted and replaced with new ones [[/C]]

[[Q]] How can symmetric keys be derived without transmitting them? [[/Q]]
[[A]] By sending them in segments over secure channels [[/A]]
[[A]] By encrypting them with hash functions [[/A]]
[[A]] By combining private and public keys on each side [[/A]]
[[A]] By embedding them into application code [[/A]]
[[A]] By downloading them from a trusted key server [[/A]]
[[C]] By combining private and public keys on each side [[/C]]

[[Q]] What keys does Bob use to derive a symmetric key shared with Alice? [[/Q]]
[[A]] Bob's private key and Alice's private key [[/A]]
[[A]] Bob's public key and Alice's public key [[/A]]
[[A]] Bob's private key and Alice's public key [[/A]]
[[A]] Bob's public key and Alice's private key [[/A]]
[[A]] Bob’s private key only [[/A]]
[[C]] Bob's private key and Alice's public key [[/C]]

[[Q]] What keys does Alice use to derive the same symmetric key as Bob? [[/Q]]
[[A]] Alice's public key and Bob's public key [[/A]]
[[A]] Alice's private key and Bob's public key [[/A]]
[[A]] Alice's private key and Bob's private key [[/A]]
[[A]] Alice's public key and Bob's private key [[/A]]
[[A]] Alice’s private key only [[/A]]
[[C]] Alice's private key and Bob's public key [[/C]]

[[Q]] What do we call algorithms that generate the same symmetric key on both sides without transmitting it? [[/Q]]
[[A]] Encryption algorithms [[/A]]
[[A]] Hashing algorithms [[/A]]
[[A]] Asymmetric ciphers [[/A]]
[[A]] Key exchange algorithms [[/A]]
[[A]] Public key infrastructure [[/A]]
[[C]] Key exchange algorithms [[/C]]

[[Q]] What is *not* involved when using key exchange algorithms? [[/Q]]
[[A]] Encryption of data [[/A]]
[[A]] Combination of public and private keys [[/A]]
[[A]] Mathematical relationships between key pairs [[/A]]
[[A]] Derivation of symmetric keys [[/A]]
[[A]] Use of temporary session keys [[/A]]
[[C]] Encryption of data [[/C]]
