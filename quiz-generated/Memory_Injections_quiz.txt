[[Q]] What must happen before software can execute on a computer? [[/Q]]
[[A]] It must be installed from the internet [[/A]]
[[A]] It must be saved in the BIOS [[/A]]
[[A]] It must be loaded into memory and processed by the CPU [[/A]]
[[A]] It must be compressed and encrypted [[/A]]
[[A]] It must be written in a high-level language [[/A]]
[[C]] It must be loaded into memory and processed by the CPU [[/C]]

[[Q]] Why must malware get into memory to operate? [[/Q]]
[[A]] Because memory makes malware invisible [[/A]]
[[A]] Because hard drives cannot run code [[/A]]
[[A]] Because the CPU only executes code from memory [[/A]]
[[A]] Because malware is blocked by the operating system otherwise [[/A]]
[[A]] Because antivirus software scans memory first [[/A]]
[[C]] Because the CPU only executes code from memory [[/C]]

[[Q]] What is a characteristic of processes running in memory? [[/Q]]
[[A]] They are executed directly from the CPU cache [[/A]]
[[A]] They contain DLLs, threads, and buffers [[/A]]
[[A]] They only include system files [[/A]]
[[A]] They are deleted after each reboot [[/A]]
[[A]] They do not require memory management [[/A]]
[[C]] They contain DLLs, threads, and buffers [[/C]]

[[Q]] What is one method malware uses to execute on a system? [[/Q]]
[[A]] Replacing the BIOS firmware [[/A]]
[[A]] Sending encrypted emails [[/A]]
[[A]] Creating firewall exceptions [[/A]]
[[A]] Running as its own process or injecting into an existing one [[/A]]
[[A]] Modifying display drivers [[/A]]
[[C]] Running as its own process or injecting into an existing one [[/C]]

[[Q]] How does process injection help malware avoid detection? [[/Q]]
[[A]] It disables system logs automatically [[/A]]
[[A]] It hides the malware behind legitimate browser traffic [[/A]]
[[A]] It looks like part of a normal, trusted process [[/A]]
[[A]] It prevents updates from being installed [[/A]]
[[A]] It uninstalls antivirus software [[/A]]
[[C]] It looks like part of a normal, trusted process [[/C]]

[[Q]] What benefit does malware gain by injecting into a privileged process? [[/Q]]
[[A]] It increases CPU performance [[/A]]
[[A]] It installs more malware [[/A]]
[[A]] It gains the same rights and permissions as the process [[/A]]
[[A]] It bypasses two-factor authentication [[/A]]
[[A]] It runs without requiring power [[/A]]
[[C]] It gains the same rights and permissions as the process [[/C]]

[[Q]] What does DLL stand for in the context of Windows systems? [[/Q]]
[[A]] Direct Load Link [[/A]]
[[A]] Disk-Level Log [[/A]]
[[A]] Dynamic-Link Library [[/A]]
[[A]] Data-Level Locator [[/A]]
[[A]] Device-Level Loader [[/A]]
[[C]] Dynamic-Link Library [[/C]]

[[Q]] What is DLL injection? [[/Q]]
[[A]] Replacing an operating system’s kernel module [[/A]]
[[A]] Deleting DLL files from memory [[/A]]
[[A]] Injecting a malicious DLL into an application’s process [[/A]]
[[A]] Creating new user accounts using a DLL file [[/A]]
[[A]] Encrypting all system DLLs [[/A]]
[[C]] Injecting a malicious DLL into an application’s process [[/C]]

[[Q]] What is the first step an attacker must take for a DLL injection to work? [[/Q]]
[[A]] Modify the computer’s BIOS settings [[/A]]
[[A]] Disable the system firewall [[/A]]
[[A]] Gain access to the system's memory controller [[/A]]
[[A]] Install the malicious DLL onto accessible storage [[/A]]
[[A]] Send a spoofed network packet [[/A]]
[[C]] Install the malicious DLL onto accessible storage [[/C]]

[[Q]] How is a malicious DLL loaded into a process during DLL injection? [[/Q]]
[[A]] It is copied from RAM to CPU directly [[/A]]
[[A]] It is executed by the antivirus engine [[/A]]
[[A]] The process references its path and loads it from disk [[/A]]
[[A]] The user manually installs it via Control Panel [[/A]]
[[A]] It is fetched through a secure tunnel [[/A]]
[[C]] The process references its path and loads it from disk [[/C]]
